{
  "compilerOptions": {
    /* 设置生成的 JavaScript 的 JavaScript 语言版本并包括兼容的库声明 */
    "target": "ES2018",
    /* 指定生成的模块代码 */
    "module": "CommonJS",
    /* 指定用于解析非相对模块名称的基本目录 */
    "baseUrl": "./",
    /* 从项目中的TypeScript和JavaScript文件生成.d.ts文件 */
    "declaration": true,
    /* 指定所有生成的文件的输出文件夹 */
    "outDir": "./dist",
    /* 指定生成的 JSX 代码 */
    "jsx": "react",
    /* 生成附加的 JavaScript 以简化对 CommonJS 模块的导入支持。这启用了类型兼容性的 allowSyntheticDefaultImports */
    "esModuleInterop": true,
    /* 确保导入时的大小写正确 */
    "forceConsistentCasingInFileNames": true,
    /* 启用所有严格的类型检查选项 */
    "strict": true,
    /* 指定 TypeScript 如何查找给定模块说明符的文件 */
    "moduleResolution": "node",
    /* 跳过对所有 .d.ts 文件进行类型检查 */
    "skipLibCheck": true,
    /* 对具有隐含的 any 类型的表达式和声明启用错误报告 */
    "noImplicitAny": false,
    /* 启用导入 .json 文件 */
    "resolveJsonModule": true
  },
  /* 指定要从编译中排除的文件列表 */
  "exclude": ["node_modules", "dist"],
  /* 指定与编译中包括的文件匹配的全局模式列表。如果在 tsconfig.json 文件中没有指定 'files' 或 'include' 属性，则编译器默认包括包含目录和子目录中的所有文件，除了 'exclude' 属性指定的文件。需要 TypeScript 2.0 或更高版本 */
  "include": ["src/**/*"]
}
